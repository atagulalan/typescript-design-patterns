:plantuml-server-url: http://www.plantuml.com/plantuml

# Ödev: Örnek bir Senaryo için UML Sınıf Şeması Hazırlayınız

## Uçak Sistemi

Aşağıda düşünülmüş olan şema, gerçek hayattandır ve koda dökmek için yazılmamıştır.

### Kurallar
* Association
** Yolcu Uçağı kulenin yardımı ile kalkış yapar.
** Kuleler, Yolcu Uçaklarının konumlarını tutar.
* Aggregation
** Yolcu Uçağı eğlence sistemine sahip olabilir. Ancak eğlence sistemsiz de bir yolcu uçağıdır.
* Composition
** Her yolcu uçağının iki adet kanadı olması zorunludur.
** Her yolcu uçağının en az bir adet koltuğunun olması zorunludur.
* Generalization
** Pilot ve Hostes, bir görevlidir.
* Realization
** Pilotlar, Ana Pilot ve Yardımcı Pilot olarak ikiye ayrılır. Bu sıfatlar, pilotların yiyeceği yemeği değiştirir. (Yemek zehirlenmesi olmaması için iki pilot farklı besinleri yemek zorundadır)
* Dependency
** Yolcu Uçağı, kalkış yapabilmek için Pilot'a ihtiyaç duyar.
* Use
** Pilot, yolcu uçağını kullanır.

### Şema

[plantuml, diagram-classes, png]     
....
@startuml
left to right direction

title Uçak Sistemi


class Kanat {
 +şekil
}

class Kule {
  +bildir()
}

class YolcuUçağı {
  +durum
  +yolcular[]
  +kuleyeBilgiVer()
}

' İki pilot aynı yemekleri yemezler, bu yüzden bu fonksiyon her pilot için override edilecek. 
interface IPilot {
  yemekYe()
}

class AnaPilot {
  +uçağıKaldır()
  +uçağıİndir()
  +yemekYe()
}

class KoPilot {
  +bilgiVer()
  +yemekYe()
}

class Pilot {
  +durumuDenetle()
}

class Hostes {
  +yiyecekGetir()
}

class Görevli {
  +anonsYap()
}

YolcuUçağı *-- "1..*" Koltuk
YolcuUçağı *-- "2" Kanat
YolcuUçağı o-- "0..*" EğlenceSistemi

YolcuUçağı <.. Pilot : "<<use>>"

IPilot <|.. KoPilot
IPilot <|.. AnaPilot

AnaPilot --o Pilot
KoPilot --o Pilot

Pilot --|> Görevli
Hostes --|> Görevli

Kule -- YolcuUçağı


@enduml
....